Pro Cal_Tool_E2C, EnergyFile, Type=Type
; *************************************************************************
; *            Calibration Tool: Energy to Channel Converter              *
; *************************************************************************
; * Version: 1.01                                                         *
; *                                                                       *
; * Purpose:  Read the Calibration File and Change the Energy to Channel  *
; *                                                                       *
; * Usage:                                                                *
; *                     ******KEYWORDS*******                             *
; *     Type :: 1 for Cals and 2 For Plastics.                            *
; *                                                                       *
; *     Inputs::                                                          *
; *           EnergyFile: The Calibration Text file with the Path         *
; *                                                                       *
; *     Outputs::                                                         *
; *           A Text file with the converted values. (Channels are rounded*
; *           to an  integer value and then its converted to the floating *
; *           Energy Value )                                              *
; *                                                                       *
; * File Formats:   Callibrated Text file                                 *
; *             The Text files generated by Cal_Energy.pro                *
; *             Few initial lines filled with file info like              *
; *             FileName, Live Time, Time ran, ETC.                       *
; *             Total number of lines to skip is fixed in Cal_Energy      *
; *                                                                       *
; *             Format:                                                   *
; *             After lines to skip,                                      *
; *             Anode Number, M value, M value error, C value, C Error    *
; *               Where Y = MX + C Standard format                        *
; *                                                                       *
; * Author: 10/16/13  Sambid Wasti                                        *
; *                   Email: Sambid.Wasti@wildcats.unh.edu                *
; *                                                                       *
; * Revision History:                                                     *
; *                                                                       *
; *                                                                       *
; * NOTE: Usually done for Calorimeters.                                  *
; *                                                                       *
; *************************************************************************
; *************************************************************************
     
     Lines_Skip=10L
     ;Read, Lines_Skip, PROMPT=' Lines to Skip = '
     
     Fname = EnergyFile
     T_num = 0 ; Temporary Number Variable
          For k = 0, StrLen(Fname)-5 Do Begin ; For Multiple FM included with different folders.
          T_num = StrPos(Fname, '/',k)
              If T_num NE -1 Then Pos = T_num
          EndFor   
     Input_Folder = StrMid(Fname,0,Pos+1)
     File_Name = StrMid(Fname,Pos+1,Strlen(Fname)-Pos-1)
     Module= StrMid(File_Name,0,5)
     
     If Keyword_Set(Type) Eq 0 then Type='all' Else If Type Eq 1 Then Type='cal' Else If Type eq 2 Then Type='pla'
     If StrPos(Fname,'cal',Pos) GT 0 then Type='cal' else If StrPos(Fname,'pla',Pos) GT 0 then Type='pla' 
    
     Main_Array = DblArr(64,5)         
     
     Openr, Lun,EnergyFile, /Get_Lun
     data=''
     
     For i=0,Lines_Skip-1 Do Begin
          Readf, Lun, Data
     EndFor
     
     While Not EOF(Lun) DO Begin
                Readf, Lun, Data
                
                Pos = StrPos(Data,' ',1)
                p = FIX(StrMid(Data,0,Pos)) ; Anode
                
                Pos1 = StrPos(Data,'.',Pos)
                Pos2 = StrPos(Data,' ',Pos1)
                M = Float(StrMid(Data,Pos+1,Pos2-Pos))
                
                Pos = Pos2
                Pos1 = StrPos(Data,'.',Pos)
                Pos2 = StrPos(Data,' ',Pos1)
                M_err = Float(StrMid(Data,Pos+1,Pos2-Pos))
                
                Pos = Pos2
                Pos1 = StrPos(Data,'.',Pos)
                Pos2 = StrPos(Data,' ',Pos1)
                C = Float(StrMid(Data,Pos+1,Pos2-Pos))
                
                Pos = Pos2
                Pos1 = StrPos(Data,'.',Pos)
                Pos2 = StrPos(Data,' ',Pos1)
                C_err = Float(StrMid(Data,Pos+1,Pos2-Pos))
                
                Main_Array[p,0]= M
                Main_Array[p,1]= M_Err
                Main_Array[p,2]= C
                Main_Array[p,3]= C_Err
                  
      EndWhile
      Free_Lun, Lun

      ;=== Now Convert that Energy Value and convert it to Channel.
      Read, Energy, Prompt=' ENERGY(KEV) = '
      Ener = FIX(ENergy)
      
              ;*******************
              ;*  E = mChan +  K *
              ;*  X = mY + C     *
              ;*  Y = X/m - C/m  *
              ;*  Y = m' X + C'  *
              ;*******************
              
      ; Now setting the Headlines so that when the file is opened we know what it is.
      Line1 = 'File Name: '+File_Name      
      Line2 = 'Anode   Chan   Energy'
      Line3 = ' --------------------- '  
   
      Openw, Lun,Input_Folder+Module+'_'+STRN(Ener)+'KEV_'+Type+'_Threshold.txt',/Get_Lun
            Printf, Lun, Line1
            Printf, Lun, Line2
            Printf, Lun, Line3
      For i = 0, 63 do Begin
              If (Type Eq 'cal') and (AnodeType(i+1) EQ 1) then Goto, Jump2
              If (Type Eq 'pla') and (AnodeType(i+1) EQ 0) then Goto, Jump2
              M1 = Float(1/Main_Array[i,0])
              C1 = Float(1*Main_Array[i,2]*M1)
              Chan = Ceil((M1*Ener)-C1)                                ; Need the FIX as chan has to be integers.
              Ener1 = Float(Chan*Main_Array[i,0]+Main_Array[i,2])     ; Convert chan(Fixed back to Energy)
              Printf, Lun, Strn(i)+'  '+Strn(Chan) +'    '+ Strn(Ener1) 
              Jump2:         
      EndFor
      Free_Lun, Lun
End