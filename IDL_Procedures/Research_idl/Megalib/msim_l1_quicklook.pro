Pro MSim_l1_quicklook, file, Title=Title, Ebin=Ebin
;
;-- Read the l1 file generated by MSim_l1v1_process
;

True = 1
False = 0

  If Keyword_Set(title) Eq 0 Then Title='Test'
  
  If Keyword_Set(Ebin) Eq 0 Then bin = 5 Else bin=Ebin


  infile = file

  
  L1Event = { $
    VERNO           :0B,            $   ; Data format version number

    In_Enrg         :0.0,           $   ; Incident Energy
    In_XPos         :0.0,           $   ; Incident Photon X Pos
    In_YPos         :0.0,           $   ; Incident Photon Y Pos
    In_ZPos         :0.0,           $   ; Incident Photon Z Pos

    NAnodes         :0B,            $   ; Number of triggered anodes (1-8)
    NPls            :0B,            $   ; Number of triggered plastic anodes
    NCal            :0B,            $   ; Number of triggered calorimeter anodes

    EvType          :0B,            $   ; Event type (1=non-adjacent; 2=side-adjacent; 3=corner-adjacent)
    EvClass         :0B,            $   ; C = 1, CC =2, PC =3, PP =4, PPC =6 more than 2 events 7 for now. P =5

    ; Storing upto 8 anodes triggered in an event.
    AnodeID         :BYTARR(8),     $   ; Array of triggered anode numbers
    ANODETYP        :BYTARR(8),     $   ; Array of triggered anode types
    
    ANODENRG_Uncor  :FLTARR(8),     $   ; Array of triggered anode energies
    AnodeNrg        :FltArr(8),     $   ; Array of triggered anode energies Corrected
    
    TotEnrg_Uncor   :0.0,           $
    TotEnrg         :0.0            $
  }
  l1msize = 110

    
  F = File_Info(infile)           ; get inout file info
  Nevents = Long(f.size / l1msize)            ; get number of events in input file

  l1data = replicate(l1event, nevents)    ; initialize input data array

  openr, Lun, infile , /Get_Lun
  
  For i = 0L, nevents-1 do Begin
  
    readu, Lun, l1event        ; read one event
    l1data[i] = l1event         ; add it to input array
  Endfor
  Free_lun, Lun
  
  PC_P = [0.0]
  PC_C = [0.0]
  For i = 0L, nevents-1 Do Begin
    Data = l1data[i]
    If data.EVClass Eq 3 Then Begin
        ;
        ;-- This is 2 events P or C
        ;
        IF Data.AnodeTyp[0] EQ 0 THen PC_C = [PC_C,Data.AnodeNrg[0]] Else IF Data.AnodeTyp[0] EQ 1 THen PC_P = [PC_P,Data.AnodeNrg[0]]
        
        IF Data.AnodeTyp[1] EQ 0 THen PC_C = [PC_C,Data.AnodeNrg[1]] Else IF Data.AnodeTyp[1] EQ 1 THen PC_P = [PC_P,Data.AnodeNrg[1]]

    Endif
  Endfor

  PC_C = PC_C[0:N_Elements(PC_C)-1]
  PC_P = PC_P[0:N_Elements(PC_P)-1]

  ;
  ;------ Generating Statistics ------
  ;
  Sts_TotEvt = nevents
  Sts_C      = n_elements(l1Data[where((l1Data.EvClass EQ 1), /Null)])
  Sts_CC     = n_elements(l1Data[where((l1Data.EvClass EQ 2), /Null)])
  Sts_PC     = n_elements(l1Data[where((l1Data.EvClass EQ 3), /Null)])
  Sts_PP     = n_elements(l1Data[where((l1Data.EvClass EQ 4), /Null)])
  Sts_P      = n_elements(l1Data[where((l1Data.EvClass EQ 5), /Null)])
  Sts_PPC    = n_elements(l1Data[where((l1Data.EvClass EQ 6), /Null)])
  Sts_Rest   = n_elements(l1Data[where((l1Data.EvClass EQ 7), /Null)])
  Print, nevents
 ; Print, L1data[where(l1Data.EvClass EQ 4, /Null)]
  Print, Sts_C, Sts_CC, Sts_PC, Sts_PP, Sts_P, Sts_PPC, Sts_Rest
  Sts_Array = [Sts_c, Sts_Cc, STs_PC, Sts_PP, Sts_P, STS_PPC, STS_Rest]
  Sts_txt_Array = [ 'C', 'CC', 'PC', 'PP', 'P', 'PPC', 'Other']
  ;Sts_Color =[ CgColor('Sea Green'), CgColor('Green'), CGColor('Sky Blue'), CgColor('Royal Blue'), CGColor('Blue Violet'), CGColor('Blue'), CgColor('Orange Red')] 
  Sts_Color =[ 'Sea Green', 'Green', 'Sky Blue', 'Royal Blue', 'Blue Violet', 'Blue','Orange Red'] 
  Sts_Txt1_Array =String(format='(D5.1,X)',(100*Sts_Array/Total(Sts_Array)))+'% ('+Strn(Sts_Array)+')'
 
  ;Strn(100*Sts_Array/Total(Sts_Array))+ '% ('+Strn(Sts_Array)+')'
  ;String(Format='(D5.1,X)', Bin)
  ;---- Generating the Quicklook file -----
  ;
  
  Xmax = 180
  cgPS_Open, Title+'_Msim_l1_quicklook.ps', XSize=5, YSize=6,/NoMatch, Landscape=0,/Inch, Font=1

  cgDisplay, 512, 640
  cgLoadCT, 13
        CgText, !D.X_Size*0.25,!D.Y_Size*1.01, Title,/Device,Charsize=3.0

        CgText,!D.X_Size*0.05,!D.Y_Size*0.88, 'File Name      : '+file,/Device,Charsize=1.3
        CgText,!D.X_Size*0.05,!D.Y_Size*0.85, 'Source Energy  : '+STRN(Data.In_Enrg)+'(keV)',/Device,Charsize=1.3
        CgText,!D.X_Size*0.05,!D.Y_Size*0.82,'Source Position : '+STRN(Data.In_XPos)+'  '+STRN(Data.In_YPos)+'  '+STRN(Data.In_ZPos),/Device,Charsize=1.3
        CgText,!D.X_Size*0.05,!D.Y_Size*0.79,'Date and Time   : '+Systime(),/Device,Charsize=1.3


        ;
        ;--- Statistics ---
        ;
        Pie, Sts_Array, Colors=CgColor([sts_Color]),  /Device,Radius = !D.X_Size*0.25 , Xpos = !D.X_Size*0.3, YPos=!D.Y_Size*0.4
        
        CgLegend, Titles=Sts_Txt1_Array , Location=[0.75,0.55],/Box,   Length=0.04,PSYM=0,Alignment=0, VSpace=3.0, Bx_Color=CgColor('WHite'),Colors=CgColor([Sts_Color])

        CgLegend, Titles=Sts_txt_Array, Location=[0.65,0.55],/Box, PSYMS=15, Length=0.0, SymColors=CgColor([Sts_Color]),$
                  VSpace=3.0, SymSize=3.0
        
        Temp_CgText = ' Statistics of Various Events'
        CgText,!D.X_Size*0.2,!D.Y_Size*0.63, Temp_CgText,/Device,Charsize=2.0
        
        CgText,!D.X_Size*0.75,!D.Y_Size*0.63, 'Total Events:'+STRN(Nevents),/Device,Charsize=1.5
 
  CgErase
          
          ;-------------------- 1 -----------------
          lay_n =1
          X_Title = 'Energy (keV)'
          Y_Title = 'Counts'
          P_Title = 'C Events (Total Energy)'
          
          Temp_hist = CgHistogram(l1Data[where ((l1Data.EvClass EQ 1) )].TotEnrg, Binsize=Bin,Locations=XArray)
          Xval = XArray+Bin/2.0

          Cgplot,XVal, Temp_Hist, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
                  XRange =[0,XMax], XStyle=1, $
                  Position =CgLayout([2,2,1], xgap=0, ygap=0, oxmargin=[6,10], oymargin =[20,5]),/noerase
          
          lay_n=2
          X_Title = 'Energy (keV)'
          Y_Title = 'Counts'
          P_Title = 'CC Events (Total Energy)'
          
          Temp_hist = CgHistogram(l1Data[where ((l1Data.EvClass EQ 2) )].TotEnrg, Binsize=Bin,Locations=XArray)
          Xval = XArray+Bin/2.0
          
          Txt_Bin = String(Format='(D5.1,X)', Bin)
          
          CgText, !D.X_Size*0.25,!D.Y_Size*1.01, Title,/Device,Charsize=3.0
          CgText, !D.X_Size*0.75,!D.Y_Size*0.97, 'BinSize ='+ Txt_Bin,/Device,Charsize=1.5
          


          Cgplot,XVal, Temp_Hist, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
                  XRange =[0,XMax], XStyle=1, $
                  Position =CgLayout([2,2,2], xgap=0, ygap=0, oxmargin=[13,5], oymargin =[20,5]),/noerase
                  
          
          
          lay_n=3                
          X_Title = 'Energy (keV)'
          Y_Title = 'Counts'
          P_Title = 'P Events (Total Energy)'

          Temp_hist = CgHistogram(l1Data[where ((l1Data.EvClass EQ 5) )].TotEnrg, Binsize=Bin,Locations=XArray)
          Xval = XArray+Bin/2.0

          Cgplot,XVal, Temp_Hist, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
            XRange =[0,XMax], XStyle=1, $
            Position =CgLayout([2,2,3], xgap=0, ygap=0, oxmargin=[6,10], oymargin =[5,15]),/noerase
            
          lay_n=4
          X_Title = 'Energy (keV)'
          Y_Title = 'Counts'
          P_Title = 'PP Events (Total Energy)'

          Temp_hist = CgHistogram(l1Data[where ((l1Data.EvClass EQ 4) )].TotEnrg, Binsize=Bin,Locations=XArray)
          Xval = XArray+Bin/2.0

          Cgplot,XVal, Temp_Hist, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
            XRange =[0,XMax], XStyle=1, $
            Position =CgLayout([2,2,4], xgap=0, ygap=0, oxmargin=[13,5], oymargin =[5,15]),/noerase
          
  cgErase
          Txt_Bin = String(Format='(D5.1,X)', Bin)

          CgText, !D.X_Size*0.25,!D.Y_Size*1.01, Title,/Device,Charsize=3.0
          CgText, !D.X_Size*0.75,!D.Y_Size*0.97, 'BinSize ='+ Txt_Bin,/Device,Charsize=1.5

          ;--------------- 2 --------------
          lay_n =1
          X_Title = 'Energy (keV)'
          Y_Title = 'Counts'
          P_Title = 'PC Events (Total Energy)'

          Temp_hist = CgHistogram(l1Data[where ((l1Data.EvClass EQ 3) )].TotEnrg, Binsize=Bin,Locations=XArray)
          Xval = XArray+Bin/2.0

          Cgplot,XVal, Temp_Hist, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
            XRange =[0,XMax], XStyle=1, $
            Position =CgLayout([2,2,1], xgap=0, ygap=0, oxmargin=[6,10], oymargin =[20,5]),/noerase

          lay_n=2
          X_Title = 'Energy (keV)'
          Y_Title = 'Counts'
          P_Title = 'PPC Events (Total Energy)'

          Temp_hist = CgHistogram(l1Data[where ((l1Data.EvClass EQ 6) )].TotEnrg, Binsize=Bin,Locations=XArray)
          Xval = XArray+Bin/2.0

          Cgplot,XVal, Temp_Hist, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
            XRange =[0,XMax], XStyle=1, $
            Position =CgLayout([2,2,2], xgap=0, ygap=0, oxmargin=[13,5], oymargin =[20,5]),/noerase

          ;
          ;-- Special plot.            ;
          ;
          Temp_PC_P = CGHistogram(PC_P,BinSize=Bin, Locations=PC_PXarray)  
          Temp_PC_C = CGHistogram(PC_C,Binsize=Bin, Locations=PC_CXarray)
          PC_PXarray =PC_PXarray+Bin/2.0
          PC_CXarray =PC_CXarray+bin/2.0
          
          X_Title = 'Energy (keV)'
          Y_Title = 'Counts'
          P_Title = 'PC Events'

          Temp_hist = CgHistogram(l1Data[where ((l1Data.EvClass EQ 3) )].TotEnrg, Binsize=Bin,Locations=XArray)
          Xval = XArray+Bin/2.0
          
          Cgplot,XVal, Temp_Hist, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
            XRange =[0,XMax], XStyle=1, $
            Position =CgLayout([2,2,3], xgap=0, ygap=0, oxmargin=[6,-42.5], oymargin =[5,10]),/noerase 
         
          Cgplot,PC_CXarray, Temp_PC_C, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
            XRange =[0,XMax], Color='Blue',XStyle=1, $
            Position =CgLayout([2,2,3], xgap=0, ygap=0, oxmargin=[6,-42.5], oymargin =[5,10]),/noerase, /Overplot
  
          Cgplot,PC_PXarray, Temp_PC_P, PSYM=10, XTitle = X_Title, Title=P_Title, YTitle=Y_Title,Charsize=1.5,$
            XRange =[0,XMax], XStyle=1,Color='Red', $
            Position =CgLayout([2,2,3], xgap=0, ygap=0, oxmargin=[6,-42.5], oymargin =[5,10]),/noerase, /Overplot  
            
         CgLegend, Titles=['Total', 'Plastic (P)', 'Calorimeter (C)'], Location=[0.84,0.48], $
            Length=0.04,PSYM=0,Colors=CgColor(['Black','Red','Blue']), Charsize=1.2, Alignment=8
         CgText, !D.X_Size*0.75,!D.Y_Size*0.44, 'Total Events ='+Strn(nevents),/Device,Charsize=1.0
            
  cgPS_Close
  Temp_Str = Title+'_Msim_l1_quicklook.ps'
  CGPS2PDF, Temp_Str,delete_ps=1

  Stop
;  Bin = 5.0
;;  help, l1Data
;  ;
;  ;-- All of this is read --
;  ;
;  ; Print, 
;   Temp_Hist =Float(histogram(l1Data[where ((l1Data.EvClass EQ 1) )].TotEnrg, BINSIZE=Bin))
;   Temp_Hist1=Float(histogram(l1Data[where ((l1Data.EvClass EQ 1) )].TotEnrg_UnCor, BINSIZE=Bin))
;   X = FINDGEN(N_Elements(Temp_Hist))
;;  Plot,X*Bin+(1+Bin/2), Temp_Hist, PSYM=10, Xrange = [0,Bin*(N_Elements(Temp_Hist)+1)], Xstyle = 1, Ystyle=1, YRange =[0,Max(Temp_Hist)*1.01]
;;    Oplot,X*Bin+(1+Bin/2), Temp_Hist1, PSYM=10, Color=CgColor('red')
;   ;And ( Event_data.Event_Type EQ PC_Type))].Scat_Angle_Inst
;;PRint, Total(Temp_Hist1), Total(Temp_Hist)
;; pie, [2,3,4,5]
End